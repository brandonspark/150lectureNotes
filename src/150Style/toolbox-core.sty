%% This latex package provides all the utilities for
%% 15150 assignments development.
%% This package is intended to be included in writeup.tex at
%% problem level.
%% For a full list of custom commands, check 15150toolbox.md
%%
%% @author: Jolin Zhou
%% @email: jiulingz@andrew.cmu.edu

\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{toolbox-reduced}[2020/05/15 Latex toolbox for M20 Lecture Notes]
\definecolor{auxColor}{HTML}{\auxColor}
%%%%%%%%%%%%%%%%%%%%%
%% Robust Commands %%
%%%%%%%%%%%%%%%%%%%%%
% used throughout this package
\RequirePackage{etoolbox}
\RequirePackage{xparse}

% hyperlink/reference
\RequirePackage{xcolor}

% graphics
\RequirePackage{graphicx}

% emphasize
\usepackage{bm}
\DeclareTextFontCommand{\emph}{\bfseries\em}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Task related environments %%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% environment colors
\RequirePackage{xcolor}
\definecolor{task_color}      {RGB}{ 64, 100, 255}
\definecolor{solution_color}  {RGB}{  0,   0, 128}
\definecolor{constraint_color}{RGB}{175,   0,   0}

\usepackage{tcolorbox}

% task environment
\RequirePackage{framed}
\providerobustcmd{\attribute}[1]{}
\newcounter{taskcounter}
\NewDocumentEnvironment{task}{m}
{
  \stepcounter{taskcounter}
  \textbf{Task \arabic{taskcounter}.}\attribute{#1}
  \phantomsection
  \addcontentsline{toc}{subsubsection}{\textcolor{task_color}{\textbf{Task \arabic{taskcounter}.}\texorpdfstring{\attribute{#1}}{}}}
  \par
}
{
  \ifdef{\loadsolution}
    {{
      \color{solution_color}
      \begin{framed}
        \textbf{Solution \arabic{taskcounter}.}\par
        \loadsolution{#1}
      \end{framed}
    }}
    {}
  \vspace{1em}
}

% constraint environment
\newenvironment{constraint}{\color{constraint_color}\textbf{Constraint:}}{}

%%%%%%%%%%%%%%%%%%%%%%%%
%% Code Specification %%
%%%%%%%%%%%%%%%%%%%%%%%%
% spec
\RequirePackage{framed}
\newrobustcmd{\spec}[4]{
    \begin{framed}
    \code{#1 : #2}\par
    \ifstrempty{#3}{}{\par REQUIRES: #3}
    \ifstrempty{#4}{}{\par ENSURES: #4}
    \end{framed}
}

%%%%%%%%%%%%%%%%%%%%%
%% Text Formatting %%
%%%%%%%%%%%%%%%%%%%%%
% symbols
\RequirePackage{amssymb, amsmath, amsthm, amsfonts}

\newrobustcmd{\stepsTo}{\Longrightarrow}
\newrobustcmd{\stepsToStar}{\Longrightarrow}
\newrobustcmd{\stepsToIn}[1]{\Longrightarrow^{#1}}

\newrobustcmd{\set}[1]{\left\lbrace #1 \right\rbrace}
\renewrobustcmd{\emptyset}{\varnothing}
\newrobustcmd{\Z}{\mathbb{Z}}
\newrobustcmd{\N}{\mathbb{N}}
\newrobustcmd{\R}{\mathbb{R}}
\newrobustcmd{\Q}{\mathbb{Q}}

\newrobustcmd{\W}[2][]{W_{\code{#1}}\left( #2 \right)}
\renewrobustcmd{\S}[2][]{S_{\code{#1}}\left( #2 \right)}

\renewrobustcmd{\O}[1]{O\left(#1\right)}

\newcommand{\lectureEnd}[1]{%
    \begin{center}%
        \colorbox{red}{%
        \parbox{6cm}{%
            {\color{white}\begin{center} Lecture ended here on #1. Anything past here will be covered in a future lecture or lab\end{center}}%
        }%
    }%
    \end{center}%
}

%%%%%%%%%%%%
%% Colors %%
%%%%%%%%%%%%

\definecolor{hlBlue}{HTML}{aedcfc}
\definecolor{hlOrange}{HTML}{ffca8a}
\colorlet{hlYellow}{yellow!45}
\colorlet{hlRed}{red!45}
\definecolor{hlGreen}{HTML}{94ff97}
\definecolor{hlPink}{HTML}{ffa3ed}
\definecolor{hlLightRed}{HTML}{ffaea8}
\definecolor{hlLightBlue}{HTML}{a1fffa}
\definecolor{hlFaintBlue}{HTML}{8fc4f2}
\definecolor{hlLightPurple}{HTML}{e3baff}
\definecolor{hlLightGreen}{HTML}{c2ffd8}

\definecolor{fgCodeBlue}{HTML}{266df0}
\definecolor{fgCodeOrange}{HTML}{ffa51f}
\definecolor{fgCodeRed}{HTML}{db3535}
\definecolor{fgCodeLightRed}{HTML}{ffaea8}
\definecolor{fgCodeGreen}{HTML}{2cad1d}

%%%%%%%%%%%%%%%%%%%%%%%%
%% Code highlighting %%
%%%%%%%%%%%%%%%%%%%%%%%%

\usepackage[T1]{fontenc}

\makeatletter

\newenvironment{atHighlight}[1][]
{\begingroup\tikzset{at@Highlight@par/.style={#1}}\begin{lrbox}{\@tempboxa}}
{\end{lrbox}\at@HL@box[at@Highlight@par]{\@tempboxa}\endgroup}

\newcommand\atHL[1][]{%
  \begin{atHighlight}[#1]\bgroup\aftergroup\at@HL@endenv%
}
\def\at@HL@endenv{%
  \end{atHighlight}%
  \egroup
}
\newcommand{\at@HL@box}[2][]{%
  \tikz[#1]{%
    \pgfpathrectangle{\pgfpoint{1pt}{0pt}}{\pgfpoint{\wd #2}{\ht #2}}%
    \pgfusepath{use as bounding box}%
    \node[anchor=base west, fill=hlRed,outer sep=0pt,inner xsep=1pt, inner ysep=0pt, rounded corners=3pt, minimum height=\ht\strutbox+1pt,#1]{\raisebox{1pt}{\strut}\strut\usebox{#2}};
  }%
}

\newenvironment{btHighlight}[1][]
{\begingroup\tikzset{bt@Highlight@par/.style={#1}}\begin{lrbox}{\@tempboxa}}
{\end{lrbox}\bt@HL@box[bt@Highlight@par]{\@tempboxa}\endgroup}

\newcommand\btHL[1][]{%
  \begin{btHighlight}[#1]\bgroup\aftergroup\bt@HL@endenv%
}
\def\bt@HL@endenv{%
  \end{btHighlight}%
  \egroup
}
\newcommand{\bt@HL@box}[2][]{%
  \tikz[#1]{%
    \pgfpathrectangle{\pgfpoint{1pt}{0pt}}{\pgfpoint{\wd #2}{\ht #2}}%
    \pgfusepath{use as bounding box}%
    \node[anchor=base west, fill=hlYellow,outer sep=0pt,inner xsep=1pt, inner ysep=0pt, rounded corners=3pt, minimum height=\ht\strutbox+1pt,#1]{\raisebox{1pt}{\strut}\strut\usebox{#2}};
  }%
}

\newenvironment{ctHighlight}[1][]
{\begingroup\tikzset{ct@Highlight@par/.style={#1}}\begin{lrbox}{\@tempboxa}}
{\end{lrbox}\ct@HL@box[ct@Highlight@par]{\@tempboxa}\endgroup}

\newcommand\ctHL[1][]{%
  \begin{ctHighlight}[#1]\bgroup\aftergroup\ct@HL@endenv%
}
\def\ct@HL@endenv{%
  \end{ctHighlight}%
  \egroup
}
\newcommand{\ct@HL@box}[2][]{%
  \tikz[#1]{%
    \pgfpathrectangle{\pgfpoint{1pt}{0pt}}{\pgfpoint{\wd #2}{\ht #2}}%
    \pgfusepath{use as bounding box}%
    \node[anchor=base west, fill=hlBlue,outer sep=0pt,inner xsep=1pt, inner ysep=0pt, rounded corners=3pt, minimum height=\ht\strutbox+1pt,#1]{\raisebox{1pt}{\strut}\strut\usebox{#2}};
  }%
}


\newenvironment{dtHighlight}[1][]
{\begingroup\tikzset{dt@Highlight@par/.style={#1}}\begin{lrbox}{\@tempboxa}}
{\end{lrbox}\dt@HL@box[dt@Highlight@par]{\@tempboxa}\endgroup}

\newcommand\dtHL[1][]{%
  \begin{dtHighlight}[#1]\bgroup\aftergroup\dt@HL@endenv%
}
\def\dt@HL@endenv{%
  \end{dtHighlight}%
  \egroup
}
\newcommand{\dt@HL@box}[2][]{%
  \tikz[#1]{%
    \pgfpathrectangle{\pgfpoint{1pt}{0pt}}{\pgfpoint{\wd #2}{\ht #2}}%
    \pgfusepath{use as bounding box}%
    \node[anchor=base west, fill=hlOrange,outer sep=0pt,inner xsep=1pt, inner ysep=0pt, rounded corners=3pt, minimum height=\ht\strutbox+1pt,#1]{\raisebox{1pt}{\strut}\strut\usebox{#2}};
  }%
}
\newenvironment{etHighlight}[1][]
{\begingroup\tikzset{et@Highlight@par/.style={#1}}\begin{lrbox}{\@tempboxa}}
{\end{lrbox}\et@HL@box[et@Highlight@par]{\@tempboxa}\endgroup}

\newcommand\etHL[1][]{%
  \begin{etHighlight}[#1]\bgroup\aftergroup\et@HL@endenv%
}
\def\et@HL@endenv{%
  \end{etHighlight}%
  \egroup
}
\newcommand{\et@HL@box}[2][]{%
  \tikz[#1]{%
    \pgfpathrectangle{\pgfpoint{1pt}{0pt}}{\pgfpoint{\wd #2}{\ht #2}}%
    \pgfusepath{use as bounding box}%
    \node[anchor=base west, fill=hlGreen,outer sep=0pt,inner xsep=1pt, inner ysep=0pt, rounded corners=3pt, minimum height=\ht\strutbox+1pt,#1]{\raisebox{1pt}{\strut}\strut\usebox{#2}};
  }%
}

\newenvironment{ftHighlight}[1][]
{\begingroup\tikzset{ft@Highlight@par/.style={#1}}\begin{lrbox}{\@tempboxa}}
{\end{lrbox}\ft@HL@box[ft@Highlight@par]{\@tempboxa}\endgroup}

\newcommand\ftHL[1][]{%
  \begin{ftHighlight}[#1]\bgroup\aftergroup\ft@HL@endenv%
}
\def\ft@HL@endenv{%
  \end{ftHighlight}%
  \egroup
}
\newcommand{\ft@HL@box}[2][]{%
  \tikz[#1]{%
    \pgfpathrectangle{\pgfpoint{1pt}{0pt}}{\pgfpoint{\wd #2}{\ht #2}}%
    \pgfusepath{use as bounding box}%
    \node[anchor=base west, fill=hlPink,outer sep=0pt,inner xsep=1pt, inner ysep=0pt, rounded corners=3pt, minimum height=\ht\strutbox+1pt,#1]{\raisebox{1pt}{\strut}\strut\usebox{#2}};
  }%
}

\newenvironment{lightRedHighlight}[1][]
{\begingroup\tikzset{lightRed@Highlight@par/.style={#1}}\begin{lrbox}{\@tempboxa}}
{\end{lrbox}\lightRed@HL@box[
  lightRed@Highlight@par
]{\@tempboxa}\endgroup}

\newcommand\lightRedHL[1][]{%
  \begin{lightRedHighlight}
    [#1]\bgroup\aftergroup\lightRed@HL@endenv%
}
\def\lightRed@HL@endenv{%
  \end{lightRedHighlight}%
  \egroup
}
\newcommand{\lightRed@HL@box}[2][]{%
  \tikz[#1]{%
    \pgfpathrectangle{\pgfpoint{1pt}{0pt}}{\pgfpoint{\wd #2}{\ht #2}}%
    \pgfusepath{use as bounding box}%
    \node[anchor=base west, fill=hlLightRed,outer sep=0pt,inner xsep=1pt, inner ysep=0pt, rounded corners=3pt, minimum height=\ht\strutbox+1pt,#1]{\raisebox{1pt}{\strut}\strut\usebox{#2}};
  }%
}

\newenvironment{lightPurpleHighlight}[1][]
{\begingroup\tikzset{lightPurple@Highlight@par/.style={#1}}\begin{lrbox}{\@tempboxa}}
{\end{lrbox}\lightPurple@HL@box[
  lightPurple@Highlight@par
]{\@tempboxa}\endgroup}

\newcommand\lightPurpleHL[1][]{%
  \begin{lightPurpleHighlight}
    [#1]\bgroup\aftergroup\lightPurple@HL@endenv%
}
\def\lightPurple@HL@endenv{%
  \end{lightPurpleHighlight}%
  \egroup
}
\newcommand{\lightPurple@HL@box}[2][]{%
  \tikz[#1]{%
    \pgfpathrectangle{\pgfpoint{1pt}{0pt}}{\pgfpoint{\wd #2}{\ht #2}}%
    \pgfusepath{use as bounding box}%
    \node[anchor=base west, fill=hlLightPurple,outer sep=0pt,inner xsep=1pt, inner ysep=0pt, rounded corners=3pt, minimum height=\ht\strutbox+1pt,#1]{\raisebox{1pt}{\strut}\strut\usebox{#2}};
  }%
}

\newenvironment{lightBlueHighlight}[1][]
{\begingroup\tikzset{lightBlue@Highlight@par/.style={#1}}\begin{lrbox}{\@tempboxa}}
{\end{lrbox}\lightBlue@HL@box[
  lightBlue@Highlight@par
]{\@tempboxa}\endgroup}

\newcommand\lightBlueHL[1][]{%
  \begin{lightBlueHighlight}
    [#1]\bgroup\aftergroup\lightBlue@HL@endenv%
}
\def\lightBlue@HL@endenv{%
  \end{lightBlueHighlight}%
  \egroup
}
\newcommand{\lightBlue@HL@box}[2][]{%
  \tikz[#1]{%
    \pgfpathrectangle{\pgfpoint{1pt}{0pt}}{\pgfpoint{\wd #2}{\ht #2}}%
    \pgfusepath{use as bounding box}%
    \node[anchor=base west, fill=hlLightBlue,outer sep=0pt,inner xsep=1pt, inner ysep=0pt, rounded corners=3pt, minimum height=\ht\strutbox+1pt,#1]{\raisebox{1pt}{\strut}\strut\usebox{#2}};
  }%
}

\newenvironment{lightGreenHighlight}[1][]
{\begingroup\tikzset{lightGreen@Highlight@par/.style={#1}}\begin{lrbox}{\@tempboxa}}
{\end{lrbox}\lightGreen@HL@box[lightGreen@Highlight@par]{\@tempboxa}\endgroup}

\newcommand\lightGreenHL[1][]{%
  \begin{lightGreenHighlight}[#1]\bgroup\aftergroup\lightGreen@HL@endenv%
}
\def\lightGreen@HL@endenv{%
  \end{lightGreenHighlight}%
  \egroup
}
\newcommand{\lightGreen@HL@box}[2][]{%
  \tikz[#1]{%
    \pgfpathrectangle{\pgfpoint{1pt}{0pt}}{\pgfpoint{\wd #2}{\ht #2}}%
    \pgfusepath{use as bounding box}%
    \node[anchor=base west, fill=hlLightGreen,outer sep=0pt,inner xsep=1pt, inner ysep=0pt, rounded corners=3pt, minimum height=\ht\strutbox+1pt,#1]{\raisebox{1pt}{\strut}\strut\usebox{#2}};
  }%
}
\newenvironment{faintBlueHighlight}[1][]
{\begingroup\tikzset{faintBlue@Highlight@par/.style={#1}}\begin{lrbox}{\@tempboxa}}
{\end{lrbox}\faintBlue@HL@box[faintBlue@Highlight@par]{\@tempboxa}\endgroup}

\newcommand\faintBlueHL[1][]{%
  \begin{faintBlueHighlight}[#1]\bgroup\aftergroup\faintBlue@HL@endenv%
}
\def\faintBlue@HL@endenv{%
  \end{faintBlueHighlight}%
  \egroup
}
\newcommand{\faintBlue@HL@box}[2][]{%
  \tikz[#1]{%
    \pgfpathrectangle{\pgfpoint{1pt}{0pt}}{\pgfpoint{\wd #2}{\ht #2}}%
    \pgfusepath{use as bounding box}%
    \node[anchor=base west, fill=hlFaintBlue,outer sep=0pt,inner xsep=1pt, inner ysep=0pt, rounded corners=3pt, minimum height=\ht\strutbox+1pt,#1]{\raisebox{1pt}{\strut}\strut\usebox{#2}};
  }%
}

\newenvironment{templateHighlight}[1][]
{\begingroup\tikzset{template@Highlight@par/.style={#1}}\begin{lrbox}{\@tempboxa}}
{\end{lrbox}\template@HL@box[template@Highlight@par]{\@tempboxa}\endgroup}

\newcommand\templateHL[1][]{%
  \begin{templateHighlight}[#1]\bgroup\aftergroup\template@HL@endenv%
}
\def\template@HL@endenv{%
  \end{templateHighlight}%
  \egroup
}
\newcommand{\template@HL@box}[2][]{%
  \tikz[#1]{%
    \pgfpathrectangle{\pgfpoint{1pt}{0pt}}{\pgfpoint{\wd #2}{\ht #2}}%
    \pgfusepath{use as bounding box}%
    \node[anchor=base west, fill=hlPink,outer sep=0pt,inner xsep=1pt, inner ysep=0pt, rounded corners=3pt, minimum height=\ht\strutbox+1pt,#1]{\raisebox{1pt}{\strut}\strut\usebox{#2}};
  }%
}

\makeatother

%%%%%%%%%%%%%%%%%%%%%%
%% Code Environment %%
%%%%%%%%%%%%%%%%%%%%%%
% code style
\RequirePackage{listings}
\RequirePackage{lstautogobble}
\RequirePackage{xcolor}

\newlength{\MaxSizeOfLineNumbers}%
\settowidth{\MaxSizeOfLineNumbers}{99}% Adjust to maximum number of lines
\addtolength{\MaxSizeOfLineNumbers}{.5ex}%

\definecolor{background_color}{RGB}{225, 225, 225}
\definecolor{string_color}    {RGB}{180, 156,   0}
\definecolor{keyword_color}   {RGB}{ 64, 100, 255}
\definecolor{comment_color}   {RGB}{  140, 140, 140}
\definecolor{number_color}    {RGB}{ 84,  84,  84}

\lstdefinestyle{yaml}{
     basicstyle=\ttfamily,
     numbers=left,
     frame=shadowbox,
    columns=fixed,
    tabsize=2,
    keywords={},
    xleftmargin=\MaxSizeOfLineNumbers,
 }
\lstdefinestyle{15150code}{
    basicstyle=\ttfamily,
    numberstyle=\tiny\ttfamily\color{number_color},
    backgroundcolor=\color{background_color},
    stringstyle=\color{string_color},
    keywordstyle=\color{keywordColor},
    commentstyle=\color{comment_color},
    numbers=left,
    frame=shadowbox,
    rulesepcolor=\color{darkBg},
    linewidth=\textwidth,
    columns=fixed,
    tabsize=2,
    xleftmargin=\MaxSizeOfLineNumbers,
    breaklines=true,
    keepspaces=true,
    showstringspaces=false,
    captionpos=b,
    autogobble=true,
    mathescape=true,
    literate={~}{{$\thicksim$}}1
             {~=}{{$\eeq$}}1
}
\lstdefinelanguage{sml}{
    language=ML,
    morestring=[b]",
    morecomment=[s]{(*}{*)},
    morekeywords={
        bool, char, exn, int, real, string, unit, list, option,
        EQUAL, GREATER, LESS, NONE, SOME, nil,
        andalso, orelse, true, false, not,
        if, then, else, case, of, as,
        let, in, end, local, val, rec,
        datatype, type, exception, handle,
        fun, fn, op, raise, ref,
        structure, struct, signature, sig, functor,
        include, open, use, infix, infixr, o, print
    },
    moredelim=**[is][\color{fgCodeRed}]{<r}{r>},
    moredelim=**[is][\color{fgCodeRed}]{<<r}{r>>},
    moredelim=**[is][\color{fgCodeBlue}]{<b}{b>},
    moredelim=**[is][\color{black}]{<bl}{bl>},
    moredelim=**[is][\color{fgCodeGreen}]{<g}{g>},
    moredelim=**[is][\color{fgCodeOrange}]{<p}{p>}
}

\lstdefinelanguage{ocaml}{
    language=ML,
    morestring=[b]",
    morecomment=[s]{(*}{*)},
    morekeywords={
        bool, char, exn, int, float, string, unit, list, option,
        None, Some, nil,
        true, false, not,
        if, then, else, match, with, when, of, as,
        let, in, end, local, val, rec,
        type, exception, try,
        function, fun, fn, op, raise, ref,
        structure, struct, signature, sig, functor,
        include, open, use, infix, o, print
    }
}

\newcommand\YAMLcolonstyle{\color{red}}
\newcommand\YAMLkeystyle{\color{black}}
\newcommand\YAMLvaluestyle{\color{blue}}

\makeatletter

\lstdefinelanguage{yaml}{
  keywords={true,false,null,y,n},
  keywordstyle=\color{darkgray},
  basicstyle=\YAMLkeystyle,                                 % assuming a key comes first
  sensitive=false,
  comment=[l]{\#},
  morecomment=[s]{/*}{*/},
  commentstyle=\color{purple}\ttfamily,
  stringstyle=\YAMLvaluestyle\ttfamily,
  moredelim=[l][\color{orange}]{\&},
  moredelim=[l][\color{magenta}]{*},
  moredelim=**[il][\YAMLcolonstyle{:}\YAMLvaluestyle]{:},   % switch to value style at :
  morestring=[b]',
  morestring=[b]",
  literate =    {>}{{\textcolor{red}\textgreater}}1
                {|}{{\textcolor{red}\textbar}}1
                {\ -\ }{{\mdseries\ -\ }}3,
}

% code inline
\newrobustcmd{\code}[2][]{{\sloppy
\ifmmode
    \text{\lstinline[language=sml,style=15150code,#1]`#2`}
\else
    {\lstinline[language=sml,style=15150code,#1]`#2`}%
\fi}}

\newrobustcmd{\ocamlcode}[2][]{{\sloppy
\ifmmode
    \text{\lstinline[language=ocaml,style=15150code,#1]`#2`}
\else
    {\lstinline[language=ocaml,style=15150code,#1]`#2`}%
\fi}}

% code block
\lstnewenvironment{codeblock}[1][]{\lstset{
  language=sml,style=15150code,numbers=none,#1,
  moredelim=**[is][\btHL]{`}{`},
  moredelim=**[is][\atHL]{&}{&},
  moredelim=**[is][\lightRedHL]{|lr|}{|lr|}, % light red
  % moredelim=**[is][\ctHL]{/}{/},
  % moredelim=**[is][\dtHL]{?}{?},
}}{}
\lstnewenvironment{yamlcodeblock}[1][]{\lstset{
  language=yaml, style=15150code, numbers=none,#1,
  moredelim=**[is][\btHL]{`}{`}, % yellow
  moredelim=**[is][\atHL]{&}{&}, % red
  moredelim=**[is][\ctHL]{/}{/}, % blue
  moredelim=**[is][\dtHL]{?}{?}, % orange
  moredelim=**[is][\etHL]{@}{@}, % green
}}{}

% no syntax highlighting
\lstnewenvironment{verbatimcodeblock}[1][]{\lstset{
  style=15150code,numbers=none,#1,
  moredelim=**[is][\btHL]{`}{`}, % yellow
  moredelim=**[is][\atHL]{&}{&}, % red
  moredelim=**[is][\lightRedHL]{|lr|}{|lr|}, % light red
  moredelim=**[is][\lightPurpleHL]{|lp|}{|lp|}, % light purple
  moredelim=**[is][\lightBlueHL]{|lb|}{|lb|}, % light blue
  moredelim=**[is][\ctHL]{|b|}{|b|}, % blue
  moredelim=**[is][\ctHL]{/}{/}, % blue
  moredelim=**[is][\dtHL]{|o|}{|o|}, % orange
  moredelim=**[is][\dtHL]{?}{?}, % orange
  moredelim=**[is][\etHL]{@}{@}, % green
  moredelim=**[is][\etHL]{|g|}{|g|}, % green
  moredelim=**[is][\ftHL]{!}{!}, % pink
}}{}

% Python code block
\lstnewenvironment{pythoncodeblock}[1][]{\lstset{
  language=python,style=15150code,numbers=none,#1,
  moredelim=**[is][\btHL]{`}{`}, % yellow
  moredelim=**[is][\atHL]{&}{&}, % red
  moredelim=**[is][\lightRedHL]{|lr|}{|lr|}, % light red
  moredelim=**[is][\lightPurpleHL]{|lp|}{|lp|}, % light purple
  moredelim=**[is][\lightBlueHL]{|lb|}{|lb|}, % light blue
  moredelim=**[is][\faintBlueHL]{|fb|}{|fb|}, % faint blue
  moredelim=**[is][\lightGreenHL]{|lg|}{|lg|}, % light blue
  moredelim=**[is][\ctHL]{|b|}{|b|}, % blue
  moredelim=**[is][\ctHL]{/}{/}, % blue
  moredelim=**[is][\dtHL]{|o|}{|o|}, % orange
  moredelim=**[is][\dtHL]{?}{?}, % orange
  moredelim=**[is][\etHL]{@}{@}, % green
  moredelim=**[is][\etHL]{|g|}{|g|}, % green
  moredelim=**[is][\ftHL]{!}{!}, % pink
}}{}
\lstnewenvironment{ocamlcodeblock}[1][]{\lstset{
  language=ocaml,style=15150code,numbers=none,#1,
  moredelim=**[is][\btHL]{`}{`},
  moredelim=**[is][\atHL]{&}{&},
  % moredelim=**[is][\ctHL]{/}{/},
  % moredelim=**[is][\dtHL]{?}{?},
  moredelim=**[is][\color{fgCodeRed}]{<r}{r>},
  moredelim=**[is][\color{fgCodeBlue}]{<b}{b>},
  moredelim=**[is][\color{black}]{<bl}{bl>},
  moredelim=**[is][\color{fgCodeGreen}]{<g}{g>},
  moredelim=**[is][\color{fgCodeOrange}]{<p}{p>}
}}{}
% code file
\newrobustcmd{\codefile}[2][]{\lstinputlisting[language=sml,style=15150code,frame=shadowbox,#1]{#2}}
% Labelled fragment
\newrobustcmd{\smlFrag}[2][]{\par%
    \hspace{-3pt}\colorbox{auxColor}{%
        {\color{white}%
            \ \LECTNUM.#2\ %
        }%
    }%
    \codefile[#1]{../content/code/\LECTNUM/fragments/#2}%
}
\newrobustcmd{\smlFragColor}[3][]{\par%
    \hspace{-3pt}\colorbox{\ifuseaux auxColor \else presentColor \fi}{%
        {\color{#1}%
            \ \LECTNUM.#2\ %
        }%
    }%
    \codefile[#1]{../content/code/\LECTNUM/fragments/#2}%
}
\newrobustcmd{\thmBox}[2]{\par%
    \customBox{Thm. #1}{#2}%
}
\newrobustcmd{\customBox}[2][white]{\par%
    \tcbox[on line,
    boxsep=3pt,colback=auxColor, left=0pt,right=0pt,top=0pt,bottom=0pt, boxrule=0pt]{%
        {\color{#1} #2}%
    }%
}
\newrobustcmd{\defBox}[1]{\par%
    \customBox{Def}{#1}
}

\newrobustcmd{\lessonBox}[1]{\par%
    \customBox{Lesson}{#1}
}

\newrobustcmd{\thankyou}{
  \begin{frame}[plain]
  \begin{center}
    \huge\term{Thank you!}
  \end{center}
  \end{frame}

}

\newrobustcmd{\tgs}{
  \vspace{-20pt}
  \begin{tikzpicture}[remember picture,overlay]
    \node[xshift=-2.8cm,yshift=-0.34cm] at (current page.north east){%
    {\footnotesize \colorbox{auxColor}{{\color{white} Types Guide Structure}}}};
  \end{tikzpicture}
}
\newrobustcmd{\rprs}{
  \vspace{-20pt}
  \begin{tikzpicture}[remember picture,overlay]
    \node[xshift=-4.2cm,yshift=-0.34cm] at (current page.north east){%
    {\footnotesize \colorbox{auxColor}{{\color{white} Recursive Problems, Recursive Solutions}}}};
  \end{tikzpicture}
}
\newrobustcmd{\ptmt}{
  \vspace{-20pt}
  \begin{tikzpicture}[remember picture,overlay]
    \node[xshift=-4.8cm,yshift=-0.34cm] at (current page.north east){%
    {\footnotesize \colorbox{auxColor}{{\color{white} Programmatic Thinking is Mathematical Thinking}}}};
  \end{tikzpicture}
}
\newrobustcmd{\ptsnmtmt}{
  \vspace{-20pt}
  \begin{tikzpicture}[remember picture,overlay]
    \node[xshift=-6cm,yshift=-0.34cm] at (current page.north east){%
    {\footnotesize \colorbox{auxColor}{{\color{white} Programmatic Thinking is Sometimes Not Mathematical Thinking}}}};
  \end{tikzpicture}
}
\newrobustcmd{\exBox}[1][white]{\par%
    \colorbox{auxColor}{%
        {\color{#1} Ex.}%
    }%
}
\newrobustcmd{\keyBox}[1]{\par%
    \customBox{Key}{#1}
}
\newrobustcmd{\noteBox}[1]{\par%
    \customBox{Note}{#1}
}

\newrobustcmd{\badBox}[1][white]{\par%
    \colorbox{red}{%
        {\color{#1} Warning}%
    }%
}

\newrobustcmd{\sectionSlide}[2]{
\section{#2}
\begin{frame}[plain]
  \begin{center}
    \huge \color{presentColor} \intermedium{#1 - #2}
  \end{center}
\end{frame}
}

\newrobustcmd{\lectureBreak}{
\begin{frame}[plain]
  \begin{center}
    \huge \color{presentColor} \intermedium{5 minute break!}
  \end{center}
\end{frame}
}

\newrobustcmd{\menti}[1]{
% \begin{frame}[plain]
%   \begin{center}
%     {\huge \color{presentColor} \intermedium{Menti code: #1}}
%     \vspace{10pt}

%     \color{presentColor} \intermedium{Go to menti.com to ask anonymously!}
%   \end{center}
% \end{frame}
}

\newrobustcmd{\quizBreak}[1]{
% \begin{frame}[plain]
%   \begin{center}
%     {\huge \color{presentColor} \intermedium{Quiz time!}}

%     \vspace{10pt}

%     \color{presentColor} \intermedium{Passcode: #1}
%   \end{center}
% \end{frame}
}

\newrobustcmd{\questionBreak}[1]{
% \begin{frame}[plain]
%   \begin{center}
%     {\huge \color{presentColor} \intermedium{Any questions?}}

%     \vspace{10pt}

%     \color{presentColor} \intermedium{Ask anonymously: menti.com with code #1}
%   \end{center}
% \end{frame}
}



\newrobustcmd{\eeq}{\cong}


\newrobustcmd{\term}[1]{{\color{auxColor}\textbf{#1}}}

\newrobustcmd{\lemmaBox}[2]{\par%
    \customBox{Lemma #1}{#2}
}
\newrobustcmd{\proofBox}[2][white]{\par%
    \colorbox{auxColor}{%
        {\color{#1} Proof #2}%
    }%
}
\newrobustcmd{\bcBox}[1]{\par%
    \customBox{BC}{#1}
}
\newrobustcmd{\isBox}[1]{\par%
    \customBox{IS}{#1}
}
\newrobustcmd{\ihBox}[2]{\par%
    \customBox{IH #1}{#2}
}

\newrobustcmd{\closureBox}{\par%
    \colorbox{purple}{%
        {\color{white} Closure}%
    }%
}
\newrobustcmd{\smlFragOffset}[3][white]{\par%
    \hspace{-3pt}\colorbox{\ifuseaux auxColor \else presentColor\fi}{%
        {\color{#1}%
            \ \LECTNUM.#2\ %
        }%
    }%
    \codefile[firstnumber=#3]{../content/code/\LECTNUM/fragments/#2}%
}

\newrobustcmd{\othercodefile}[3][]{\lstinputlisting[language=#3,frame=single,#1]{#2}}
\newrobustcmd{\nonsmlFrag}[3][white]{\par%
    \hspace{-3pt}\colorbox{\ifuseaux auxColor \else presentColor\fi }{%
        {\color{#1}%
            \ \LECTNUM.#2\ %
        }%
    }%
    \othercodefile{../content/code/\LECTNUM/fragments/#2}{#3}%
}

%%%%%%%%%%%%%%%%%%%%%%
%% Tooltips         %%
%%%%%%%%%%%%%%%%%%%%%%

% Copy pasted from:
% https://tex.stackexchange.com/questions/155518/tooltip-that-works-with-all-pdf-readers

\usepackage{pdfbase}[2017/03/16]
\usepackage{xparse,ocgbase}
\usepackage{xcolor,calc}
\usepackage{tikzpagenodes,linegoal}
\usetikzlibrary{calc}
\usepackage{tcolorbox}

\ExplSyntaxOn
\let\tpPdfLink\pbs_pdflink:nn
\let\tpPdfAnnot\pbs_pdfannot:nnnn\let\tpPdfLastAnn\pbs_pdflastann:
\let\tpAppendToFields\pbs_appendtofields:n
\def\tpPdfXform{\pbs_pdfxform:nnnnn{1}{1}{}{}}
\let\tpPdfLastXform\pbs_pdflastxform:
\let\cListSet\clist_set:Nn\let\cListItem\clist_item:Nn
\ExplSyntaxOff

\makeatletter
\NewDocumentCommand{\tooltip}{%
  ssssO{\ifdefined\@linkcolor\@linkcolor\else blue\fi}mO{yellow!20}mO{0pt,0pt}%
}{{%
  \leavevmode%
  \IfBooleanT{#2}{%
    %for variants with two and more stars, put tip box on a PDF Layer (OCG)
    \ocgbase@new@ocg{tipOCG.\thetcnt}{%
      /Print<</PrintState/OFF>>/Export<</ExportState/OFF>>%
    }{false}%
    \xdef\tpTipOcg{\ocgbase@last@ocg}%
    %prevent simultaneous visibility of multiple non-draggable tooltips
    \ocgbase@add@ocg@to@radiobtn@grp{tool@tips}{\ocgbase@last@ocg}%
  }%
  \tpPdfLink{%
    \IfBooleanTF{#4}{%
      /Subtype/Link/Border[0 0 0]/A <</S/SetOCGState/State [/Toggle \tpTipOcg]>>
    }{%
      /Subtype/Screen%
      /AA<<%
        \IfBooleanTF{#3}{%
          /E<</S/SetOCGState/State [/Toggle \tpTipOcg]>>%
        }{%
          \IfBooleanTF{#2}{%
            /E<</S/SetOCGState/State [/ON \tpTipOcg]>>%
            /X<</S/SetOCGState/State [/OFF \tpTipOcg]>>%
          }{
            \IfBooleanTF{#1}{%
              /E<</S/JavaScript/JS(%
                var fd=this.getField('tip.\thetcnt');%
                if(typeof(click\thetcnt)=='undefined'){%
                  var click\thetcnt=false;%
                  var fdor\thetcnt=fd.rect;var dragging\thetcnt=false;%
                }%
                if(fd.display==display.hidden){%
                  fd.delay=true;fd.display=display.visible;fd.delay=false;%
                }else{%
                  if(!click\thetcnt&&!dragging\thetcnt){fd.display=display.hidden;}%
                  if(!dragging\thetcnt){click\thetcnt=false;}%
                }%
                this.dirty=false;%
              )>>%
            }{%
              /E<</S/JavaScript/JS(%
                var fd=this.getField('tip.\thetcnt');%
                if(typeof(click\thetcnt)=='undefined'){%
                  var click\thetcnt=false;%
                  var fdor\thetcnt=fd.rect;var dragging\thetcnt=false;%
                }%
                if(fd.display==display.hidden){%
                  fd.delay=true;fd.display=display.visible;fd.delay=false;%
                }%
               this.dirty=false;%
              )>>%
              /X<</S/JavaScript/JS(%
                if(!click\thetcnt&&!dragging\thetcnt){fd.display=display.hidden;}%
                if(!dragging\thetcnt){click\thetcnt=false;}%
                this.dirty=false;%
              )>>%
            }%
            /U<</S/JavaScript/JS(click\thetcnt=true;this.dirty=false;)>>%
            /PC<</S/JavaScript/JS (%
              var fd=this.getField('tip.\thetcnt');%
              try{fd.rect=fdor\thetcnt;}catch(e){}%
              fd.display=display.hidden;this.dirty=false;%
            )>>%
            /PO<</S/JavaScript/JS(this.dirty=false;)>>%
          }%
        }%
      >>%
    }%
  }{{\color{#5}#6}}%
  \sbox\tiptext{%
    \IfBooleanT{#2}{%
      \ocgbase@oc@bdc{\tpTipOcg}\ocgbase@open@stack@push{\tpTipOcg}}%
    %\fcolorbox{black}{#7}{#8}%
    \tcbox[colframe=black,colback=#7,size=fbox,arc=1ex,sharp corners=southwest]{#8}%
    \IfBooleanT{#2}{\ocgbase@oc@emc\ocgbase@open@stack@pop\tpNull}%
  }%
  \cListSet\tpOffsets{#9}%
  \edef\twd{\the\wd\tiptext}%
  \edef\tht{\the\ht\tiptext}%
  \edef\tdp{\the\dp\tiptext}%
  \tipshift=0pt%
  \IfBooleanTF{#2}{%
    %OCG-based (that is, all non-draggable) boxes should not extend beyond the
    %current column as they may get overlaid by text in the neighbouring column
    \setlength\whatsleft{\linegoal}%
  }{%
    \measureremainder{\whatsleft}%
  }%
  \ifdim\whatsleft<\dimexpr\twd+\cListItem\tpOffsets{1}\relax%
    \setlength\tipshift{\whatsleft-\twd-\cListItem\tpOffsets{1}}\fi%
  \IfBooleanF{#2}{\tpPdfXform{\tiptext}}%
  \raisebox{\heightof{#6}+\tdp+\cListItem\tpOffsets{2}}[0pt][0pt]{%
    \makebox[0pt][l]{\hspace{\dimexpr\tipshift+\cListItem\tpOffsets{1}\relax}%
    \IfBooleanTF{#2}{\usebox{\tiptext}}{%
      \tpPdfAnnot{\twd}{\tht}{\tdp}{%
        /Subtype/Widget/FT/Btn/T (tip.\thetcnt)%
        /AP<</N \tpPdfLastXform>>%
        /MK<</TP 1/I \tpPdfLastXform/IF<</S/A/FB true/A [0.0 0.0]>>>>%
        /Ff 65536/F 3%
        /AA <<%
          /U <<%
            /S/JavaScript/JS(%
              var fd=event.target;%
              var mX=this.mouseX;var mY=this.mouseY;%
              var drag=function(){%
                var nX=this.mouseX;var nY=this.mouseY;%
                var dX=nX-mX;var dY=nY-mY;%
                var fdr=fd.rect;%
                fdr[0]+=dX;fdr[1]+=dY;fdr[2]+=dX;fdr[3]+=dY;%
                fd.rect=fdr;mX=nX;mY=nY;%
              };%
              if(!dragging\thetcnt){%
                dragging\thetcnt=true;Int=app.setInterval("drag()",1);%
              }%
              else{app.clearInterval(Int);dragging\thetcnt=false;}%
              this.dirty=false;%
            )%
          >>%
        >>%
      }%
      \tpAppendToFields{\tpPdfLastAnn}%
    }%
  }}%
  \stepcounter{tcnt}%
}}
\makeatother
\newsavebox\tiptext\newcounter{tcnt}
\newlength{\whatsleft}\newlength{\tipshift}
\newcommand{\measureremainder}[1]{%
  \begin{tikzpicture}[overlay,remember picture]
    \path let \p0 = (0,0), \p1 = (current page.east) in
      [/utils/exec={\pgfmathsetlength#1{\x1-\x0}\global#1=#1}];
  \end{tikzpicture}%
}